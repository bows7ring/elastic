diff --git arch/riscv/Kconfig arch/riscv/Kconfig
index eb56c82d8a..43dd2680c6 100644
--- arch/riscv/Kconfig
+++ arch/riscv/Kconfig
@@ -11,6 +11,7 @@

 config RISCV
     def_bool y
+    select ARCH_32BIT_OFF_T if !64BIT
     # even on 32-bit, physical (and DMA) addresses are > 32-bits
     select PHYS_ADDR_T_64BIT
     select OF
diff --git arch/riscv/include/uapi/asm/unistd.h arch/riscv/include/uapi/asm/unistd.h
index 0e2eeeb1fd..486a288b45 100644
--- arch/riscv/include/uapi/asm/unistd.h
+++ arch/riscv/include/uapi/asm/unistd.h
@@ -17,8 +17,11 @@

 #ifdef __LP64__
 #define __ARCH_WANT_NEW_STAT
-#define __ARCH_WANT_SET_GET_RLIMIT
 #endif /* __LP64__ */
+#define __ARCH_WANT_SET_GET_RLIMIT
+#ifndef __LP64__
+#define __ARCH_WANT_TIME32_SYSCALLS
+#endif

 #include <asm-generic/unistd.h>

diff --git arch/riscv/kernel/vdso/Makefile arch/riscv/kernel/vdso/Makefile
index fec62b24df..eed1c137f6 100644
--- arch/riscv/kernel/vdso/Makefile
+++ arch/riscv/kernel/vdso/Makefile
@@ -2,11 +2,9 @@

 # Symbols present in the vdso
 vdso-syms  = rt_sigreturn
-ifdef CONFIG_64BIT
 vdso-syms += gettimeofday
 vdso-syms += clock_gettime
 vdso-syms += clock_getres
-endif
 vdso-syms += getcpu
 vdso-syms += flush_icache

diff --git arch/riscv/mm/init.c arch/riscv/mm/init.c
index 573463d..be1f2c4 100644
--- arch/riscv/mm/init.c
+++ arch/riscv/mm/init.c
@@ -19,6 +19,8 @@
 #include <asm/pgtable.h>
 #include <asm/io.h>
 
+#include <linux/dma-contiguous.h>
+
 #include "../kernel/head.h"
 
 unsigned long empty_zero_page[PAGE_SIZE / sizeof(unsigned long)]
@@ -457,6 +459,7 @@ void __init paging_init(void)
 	sparse_init();
 	setup_zero_page();
 	zone_sizes_init();
+	dma_contiguous_reserve(memblock_end_of_DRAM());
 }

 #ifdef CONFIG_SPARSEMEM_VMEMMAP
